{"version":3,"sources":["boxzilla.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","css","element","styles","property","style","initObjectProperties","properties","value","newObject","copyObjectProperties","object","animated","getAttribute","toggle","animation","nowVisible","display","offsetLeft","clone","cloneNode","cleanup","removeAttribute","setAttribute","hiddenStyles","visibleStyles","computedStyles","window","getComputedStyle","overflowY","animate","opacity","targetStyles","fn","last","Date","initialStyles","currentStyles","propSteps","parseFloat","to","current","duration","tick","step","increment","newValue","now","timeSinceLastTick","done","suffix","requestAnimationFrame","setTimeout","2","merge","obj1","obj2","obj3","attrname","getDocumentHeight","body","document","html","documentElement","height","Math","max","scrollHeight","offsetHeight","clientHeight","Boxzilla","defaults","rehide","content","cookie","icon","minimumScreenWidth","position","testMode","trigger","closable","Animator","Box","id","config","this","overlay","getElementById","visible","dismissed","triggered","triggerHeight","cookieSet","closeIcon","method","calculateTriggerHeight","isCookieSet","dom","events","prototype","box","addEventListener","dismiss","bind","target","tagName","setCookie","needle","location","hash","fits","locationHashRefersBox","show","wrapper","createElement","className","appendChild","innerHTML","scripts","querySelectorAll","script","createTextNode","text","parentNode","removeChild","setCustomBoxStyling","origDisplay","maxHeight","windowHeight","innerHeight","boxHeight","newTopMargin","marginTop","classList","firstInput","querySelector","focus","hide","triggerElement","offset","getBoundingClientRect","top","elementId","substring","innerWidth","mayAutoShow","mayRehide","replace","RegExp","hours","expiryDate","setHours","getHours","toUTCString","shown","preventDefault","_Boxzilla","./animator.js"],"mappings":"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","file":"boxzilla.min.js","sourcesContent":["\"use strict\";\n\n(function e(t, n, r) {\n    function s(o, u) {\n        if (!n[o]) {\n            if (!t[o]) {\n                var a = typeof require == \"function\" && require;if (!u && a) return a(o, !0);if (i) return i(o, !0);var f = new Error(\"Cannot find module '\" + o + \"'\");throw f.code = \"MODULE_NOT_FOUND\", f;\n            }var l = n[o] = { exports: {} };t[o][0].call(l.exports, function (e) {\n                var n = t[o][1][e];return s(n ? n : e);\n            }, l, l.exports, e, t, n, r);\n        }return n[o].exports;\n    }var i = typeof require == \"function\" && require;for (var o = 0; o < r.length; o++) {\n        s(r[o]);\n    }return s;\n})({ 1: [function (require, module, exports) {\n        var duration = 320;\n\n        function css(element, styles) {\n            for (var property in styles) {\n                element.style[property] = styles[property];\n            }\n        }\n\n        function initObjectProperties(properties, value) {\n            var newObject = {};\n            for (var i = 0; i < properties.length; i++) {\n                newObject[properties[i]] = value;\n            }\n            return newObject;\n        }\n\n        function copyObjectProperties(properties, object) {\n            var newObject = {};\n            for (var i = 0; i < properties.length; i++) {\n                newObject[properties[i]] = object[properties[i]];\n            }\n            return newObject;\n        }\n\n        /**\n         * Checks if the given element is currently being animated.\n         *\n         * @param element\n         * @returns {boolean}\n         */\n        function animated(element) {\n            return !!element.getAttribute('data-animated');\n        }\n\n        /**\n         * Toggles the element using the given animation.\n         *\n         * @param element\n         * @param animation Either \"fade\" or \"slide\"\n         */\n        function toggle(element, animation) {\n            var nowVisible = element.style.display != 'none' || element.offsetLeft > 0;\n\n            // create clone for reference\n            var clone = element.cloneNode(true);\n            var cleanup = function cleanup() {\n                element.removeAttribute('data-animated');\n                element.setAttribute('style', clone.getAttribute('style'));\n                element.style.display = nowVisible ? 'none' : '';\n            };\n\n            // store attribute so everyone knows we're animating this element\n            element.setAttribute('data-animated', \"true\");\n\n            // toggle element visiblity right away if we're making something visible\n            if (!nowVisible) {\n                element.style.display = '';\n            }\n\n            var hiddenStyles, visibleStyles;\n\n            // animate properties\n            if (animation === 'slide') {\n                hiddenStyles = initObjectProperties([\"height\", \"borderTopWidth\", \"borderBottomWidth\", \"paddingTop\", \"paddingBottom\"], 0);\n                visibleStyles = {};\n\n                if (!nowVisible) {\n                    var computedStyles = window.getComputedStyle(element);\n                    visibleStyles = copyObjectProperties([\"height\", \"borderTopWidth\", \"borderBottomWidth\", \"paddingTop\", \"paddingBottom\"], computedStyles);\n                    css(element, hiddenStyles);\n                }\n\n                // don't show a scrollbar during animation\n                element.style.overflowY = 'hidden';\n                animate(element, nowVisible ? hiddenStyles : visibleStyles, cleanup);\n            } else {\n                hiddenStyles = { opacity: 0 };\n                visibleStyles = { opacity: 1 };\n                if (!nowVisible) {\n                    css(element, hiddenStyles);\n                }\n\n                animate(element, nowVisible ? hiddenStyles : visibleStyles, cleanup);\n            }\n        }\n\n        function animate(element, targetStyles, fn) {\n            var last = +new Date();\n            var initialStyles = window.getComputedStyle(element);\n            var currentStyles = {};\n            var propSteps = {};\n\n            for (var property in targetStyles) {\n                // make sure we have an object filled with floats\n                targetStyles[property] = parseFloat(targetStyles[property]);\n\n                // calculate step size & current value\n                var to = targetStyles[property];\n                var current = parseFloat(initialStyles[property]);\n\n                // is there something to do?\n                if (current == to) {\n                    delete targetStyles[property];\n                    continue;\n                }\n\n                propSteps[property] = (to - current) / duration; // points per second\n                currentStyles[property] = current;\n            }\n\n            var tick = function tick() {\n                var now = +new Date();\n                var timeSinceLastTick = now - last;\n                var done = true;\n\n                var step, to, increment, newValue;\n                for (var property in targetStyles) {\n                    step = propSteps[property];\n                    to = targetStyles[property];\n                    increment = step * timeSinceLastTick;\n                    newValue = currentStyles[property] + increment;\n\n                    if (step > 0 && newValue >= to || step < 0 && newValue <= to) {\n                        newValue = to;\n                    } else {\n                        done = false;\n                    }\n\n                    // store new value\n                    currentStyles[property] = newValue;\n\n                    var suffix = property !== \"opacity\" ? \"px\" : \"\";\n                    element.style[property] = newValue + suffix;\n                }\n\n                last = +new Date();\n\n                // keep going until we're done for all props\n                if (!done) {\n                    window.requestAnimationFrame && requestAnimationFrame(tick) || setTimeout(tick, 32);\n                } else {\n                    // call callback\n                    fn && fn();\n                }\n            };\n\n            tick();\n        }\n\n        module.exports = {\n            'toggle': toggle,\n            'animate': animate,\n            'animated': animated\n        };\n    }, {}], 2: [function (require, module, exports) {\n        'use strict';\n\n        var defaults = {\n            'animation': 'fade',\n            'rehide': false,\n            'content': '',\n            'cookie': null,\n            'icon': '&times',\n            'minimumScreenWidth': 0,\n            'position': 'center',\n            'testMode': false,\n            'trigger': false,\n            'closable': true\n        },\n            Boxzilla,\n            Animator = require('./animator.js');\n\n        /**\n         * Merge 2 objects, values of the latter overwriting the former.\n         *\n         * @param obj1\n         * @param obj2\n         * @returns {*}\n         */\n        function merge(obj1, obj2) {\n            var obj3 = {};\n            for (var attrname in obj1) {\n                obj3[attrname] = obj1[attrname];\n            }\n            for (var attrname in obj2) {\n                obj3[attrname] = obj2[attrname];\n            }\n            return obj3;\n        }\n\n        /**\n         * Get the real height of entire document.\n         * @returns {number}\n         */\n        function getDocumentHeight() {\n            var body = document.body,\n                html = document.documentElement;\n\n            var height = Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight);\n\n            return height;\n        }\n\n        // Box Object\n        var Box = function Box(id, config) {\n            this.id = id;\n\n            // store config values\n            this.config = merge(defaults, config);\n\n            // store ref to overlay\n            this.overlay = document.getElementById('boxzilla-overlay');\n\n            // state\n            this.visible = false;\n            this.dismissed = false;\n            this.triggered = false;\n            this.triggerHeight = 0;\n            this.cookieSet = false;\n            this.element = null;\n            this.closeIcon = null;\n\n            // if a trigger was given, calculate values once and store\n            if (this.config.trigger) {\n                if (this.config.trigger.method === 'percentage' || this.config.trigger.method === 'element') {\n                    this.triggerHeight = this.calculateTriggerHeight();\n                }\n\n                this.cookieSet = this.isCookieSet();\n            }\n\n            // create dom elements for this box\n            this.dom();\n\n            // further initialise the box\n            this.events();\n        };\n\n        // initialise the box\n        Box.prototype.events = function () {\n            var box = this;\n\n            // attach event to \"close\" icon inside box\n            this.closeIcon && this.closeIcon.addEventListener('click', box.dismiss.bind(this));\n\n            this.element.addEventListener('click', function (e) {\n                if (e.target.tagName === 'A') {\n                    Boxzilla.trigger('box.interactions.link', [box, e.target]);\n                }\n            }, false);\n\n            this.element.addEventListener('submit', function (e) {\n                box.setCookie();\n                Boxzilla.trigger('box.interactions.form', [box, e.target]);\n            }, false);\n\n            window.addEventListener(\"hashchange\", function () {\n                var needle = \"#boxzilla-\" + box.id;\n                if (location.hash === needle) {\n                    box.toggle();\n                }\n            });\n\n            // maybe show box right away\n            if (this.fits() && this.locationHashRefersBox()) {\n                window.addEventListener('load', this.show.bind(this));\n            }\n        };\n\n        // generate dom elements for this box\n        Box.prototype.dom = function () {\n            var wrapper = document.createElement('div');\n            wrapper.className = 'boxzilla-container boxzilla-' + this.config.position + '-container';\n\n            var box = document.createElement('div');\n            box.setAttribute('id', 'boxzilla-' + this.id);\n            box.className = 'boxzilla boxzilla-' + this.id + ' boxzilla-' + this.config.position;\n            box.style.display = 'none';\n            wrapper.appendChild(box);\n\n            var content = document.createElement('div');\n            content.className = 'boxzilla-content';\n            content.innerHTML = this.config.content;\n            box.appendChild(content);\n\n            // remove <script> from box content and append them to the document body\n            var scripts = content.querySelectorAll('script');\n            if (scripts.length) {\n                var script = document.createElement('script');\n                for (var i = 0; i < scripts.length; i++) {\n                    script.appendChild(document.createTextNode(scripts[i].text));\n                    scripts[i].parentNode.removeChild(scripts[i]);\n                }\n                document.body.appendChild(script);\n            }\n\n            if (this.config.closable && this.config.icon) {\n                var closeIcon = document.createElement('span');\n                closeIcon.className = \"boxzilla-close-icon\";\n                closeIcon.innerHTML = this.config.icon;\n                box.appendChild(closeIcon);\n                this.closeIcon = closeIcon;\n            }\n\n            document.body.appendChild(wrapper);\n            this.element = box;\n        };\n\n        // set (calculate) custom box styling depending on box options\n        Box.prototype.setCustomBoxStyling = function () {\n\n            // reset element to its initial state\n            var origDisplay = this.element.style.display;\n            this.element.style.display = '';\n            this.element.style.overflowY = 'auto';\n            this.element.style.maxHeight = 'none';\n\n            // get new dimensions\n            var windowHeight = window.innerHeight;\n            var boxHeight = this.element.clientHeight;\n\n            // add scrollbar to box and limit height\n            if (boxHeight > windowHeight) {\n                this.element.style.maxHeight = windowHeight + \"px\";\n                this.element.style.overflowY = 'scroll';\n            }\n\n            // set new top margin for boxes which are centered\n            if (this.config.position === 'center') {\n                var newTopMargin = (windowHeight - boxHeight) / 2;\n                newTopMargin = newTopMargin >= 0 ? newTopMargin : 0;\n                this.element.style.marginTop = newTopMargin + \"px\";\n            }\n\n            this.element.style.display = origDisplay;\n        };\n\n        // toggle visibility of the box\n        Box.prototype.toggle = function (show) {\n\n            // revert visibility if no explicit argument is given\n            if (typeof show === \"undefined\") {\n                show = !this.visible;\n            }\n\n            // is box already at desired visibility?\n            if (show === this.visible) {\n                return false;\n            }\n\n            // is box being animated?\n            if (Animator.animated(this.element)) {\n                return false;\n            }\n\n            // if box should be hidden but is not closable, bail.\n            if (!show && !this.config.closable) {\n                return false;\n            }\n\n            // set new visibility status\n            this.visible = show;\n\n            // calculate new styling rules\n            this.setCustomBoxStyling();\n\n            // trigger event\n            Boxzilla.trigger('box.' + (show ? 'show' : 'hide'), [this]);\n\n            // show or hide box using selected animation\n            if (this.config.position === 'center') {\n                this.overlay.classList.toggle('boxzilla-' + this.id + '-overlay');\n                Animator.toggle(this.overlay, \"fade\");\n            }\n\n            Animator.toggle(this.element, this.config.animation);\n\n            // focus on first input field in box\n            var firstInput = this.element.querySelector('input, textarea');\n            if (firstInput) {\n                firstInput.focus();\n            }\n\n            return true;\n        };\n\n        // show the box\n        Box.prototype.show = function () {\n            return this.toggle(true);\n        };\n\n        // hide the box\n        Box.prototype.hide = function () {\n            return this.toggle(false);\n        };\n\n        // calculate trigger height\n        Box.prototype.calculateTriggerHeight = function () {\n            var triggerHeight = 0;\n\n            if (this.config.trigger.method === 'element') {\n                var triggerElement = document.body.querySelector(this.config.trigger.value);\n                if (triggerElement) {\n                    var offset = triggerElement.getBoundingClientRect();\n                    triggerHeight = offset.top;\n                }\n            } else if (this.config.trigger.method === 'percentage') {\n                triggerHeight = this.config.trigger.value / 100 * getDocumentHeight();\n            }\n\n            return triggerHeight;\n        };\n\n        // checks whether window.location.hash equals the box element ID or that of any element inside the box\n        Box.prototype.locationHashRefersBox = function () {\n\n            if (!window.location.hash || 0 === window.location.hash.length) {\n                return false;\n            }\n\n            var elementId = window.location.hash.substring(1);\n            if (elementId === this.element.id) {\n                return true;\n            } else if (this.element.querySelector('#' + elementId)) {\n                return true;\n            }\n\n            return false;\n        };\n\n        Box.prototype.fits = function () {\n            if (this.config.minimumScreenWidth <= 0) {\n                return true;\n            }\n\n            return window.innerWidth > this.config.minimumScreenWidth;\n        };\n\n        // is this box enabled?\n        Box.prototype.mayAutoShow = function () {\n\n            if (this.dismissed) {\n                return false;\n            }\n\n            // check if box fits on given minimum screen width\n            if (!this.fits()) {\n                return false;\n            }\n\n            // if trigger empty or error in calculating triggerHeight, return false\n            if (!this.config.trigger) {\n                return false;\n            }\n\n            // rely on cookie value (show if not set, don't show if set)\n            return !this.cookieSet;\n        };\n\n        Box.prototype.mayRehide = function () {\n            return this.config.rehide && this.triggered;\n        };\n\n        Box.prototype.isCookieSet = function () {\n            // always show on test mode\n            if (this.config.testMode) {\n                return false;\n            }\n\n            // if either cookie is null or trigger & dismiss are both falsey, don't bother checking.\n            if (!this.config.cookie || !this.config.cookie.triggered && !this.config.cookie.dismissed) {\n                return false;\n            }\n\n            var cookieSet = document.cookie.replace(new RegExp(\"(?:(?:^|.*;)\\\\s*\" + 'boxzilla_box_' + this.id + \"\\\\s*\\\\=\\\\s*([^;]*).*$)|^.*$\"), \"$1\") === \"true\";\n            return cookieSet;\n        };\n\n        // set cookie that disables automatically showing the box\n        Box.prototype.setCookie = function (hours) {\n            var expiryDate = new Date();\n            expiryDate.setHours(expiryDate.getHours() + hours);\n            document.cookie = 'boxzilla_box_' + this.id + '=true; expires=' + expiryDate.toUTCString() + '; path=/';\n        };\n\n        Box.prototype.trigger = function () {\n            var shown = this.show();\n            if (!shown) {\n                return;\n            }\n\n            this.triggered = true;\n            if (this.config.cookie && this.config.cookie.triggered) {\n                this.setCookie(this.config.cookie.triggered);\n            }\n        };\n\n        /**\n         * Dismisses the box and optionally sets a cookie.\n         *\n         * @param e The event that triggered this dismissal.\n         * @returns {boolean}\n         */\n        Box.prototype.dismiss = function (e) {\n            // prevent default action\n            e && e.preventDefault();\n\n            // only dismiss box if it's currently open.\n            if (!this.visible) {\n                return false;\n            }\n\n            // hide box element\n            this.hide();\n\n            // set cookie\n            if (this.config.cookie && this.config.cookie.dismissed) {\n                this.setCookie(this.config.cookie.dismissed);\n            }\n\n            this.dismissed = true;\n            Boxzilla.trigger('box.dismiss', [this]);\n            return true;\n        };\n\n        module.exports = function (_Boxzilla) {\n            Boxzilla = _Boxzilla;\n            return Box;\n        };\n    }, { \"./animator.js\": 1 }] }, {}, [2]);"]}