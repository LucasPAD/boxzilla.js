{"version":3,"sources":["boxzilla.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","EventEmitter","indexOfListener","listeners","listener","alias","name","this","apply","arguments","proto","prototype","originalGlobalValue","getListeners","evt","response","key","events","_getEvents","RegExp","hasOwnProperty","test","flattenListeners","flatListeners","push","getListenersAsObject","Array","addListener","listenerIsWrapped","once","on","addOnceListener","defineEvent","defineEvents","evts","removeListener","index","splice","off","addListeners","manipulateListeners","removeListeners","remove","value","single","multiple","removeEvent","type","_events","removeAllListeners","emitEvent","args","listenersMap","slice","_getOnceReturnValue","trigger","emit","setOnceReturnValue","_onceReturnValue","noConflict","define","amd","2","animate","el","property","target","callback","last","Date","css","window","getComputedStyle","initial","parseFloat","step","console","log","tick","suffix","current","style","increment","newValue","done","requestAnimationFrame","setTimeout","merge","obj1","obj2","obj3","attrname","Boxzilla","defaults","animation","rehide","content","cookieTime","icon","minimumScreenWidth","position","testMode","closable","Box","id","config","overlay","document","getElementById","visible","closed","triggered","triggerHeight","cookieSet","method","calculateTriggerHeight","isCookieSet","element","dom","box","querySelector","addEventListener","dismiss","bind","tagName","setCookie","body","href","getAttribute","substring","toggle","preventDefault","fits","locationHashRefersBox","show","wrapper","createElement","className","setAttribute","display","appendChild","innerHTML","scripts","querySelectorAll","script","createTextNode","text","parentNode","removeChild","setCustomBoxStyling","overflowY","maxHeight","windowHeight","innerHeight","boxHeight","clientHeight","newTopMargin","marginTop","targetHeight","opacity","height","thenHide","boxSizing","firstInput","focus","hide","triggerElement","offset","getBoundingClientRect","top","expiryDate","setDate","getDate","cookie","toUTCString","location","hash","elementId","innerWidth","mayAutoShow","mayRehide","replace","shown","_Boxzilla","3","each","obj","throttle","fn","threshhold","scope","deferTimer","context","now","clearTimeout","onKeyUp","keyCode","checkPageViewsCriteria","boxes","pageViews","checkTimeCriteria","siteTimer","time","pageTimer","checkHeightCriteria","scrollY","scrollHeight","recalculateHeights","onOverlayClick","x","offsetX","y","offsetY","rect","margin","left","right","bottom","triggerExitIntent","exitIntentTriggered","onMouseLeave","delay","clientY","exitIntentDelayTimer","onMouseEnter","clearInterval","Object","create","Timer","sessionStorage","getItem","timers","start","sessionTime","stop","setItem","init","setInterval","opts","./Box.js","./Timer.js","wolfy87-eventemitter","4","interval"],"mappings":"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","file":"boxzilla.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n/*!\n * EventEmitter v4.2.11 - git.io/ee\n * Unlicense - http://unlicense.org/\n * Oliver Caldwell - http://oli.me.uk/\n * @preserve\n */\n\n;(function () {\n    'use strict';\n\n    /**\n     * Class for managing events.\n     * Can be extended to provide event functionality in other classes.\n     *\n     * @class EventEmitter Manages event registering and emitting.\n     */\n    function EventEmitter() {}\n\n    // Shortcuts to improve speed and size\n    var proto = EventEmitter.prototype;\n    var exports = this;\n    var originalGlobalValue = exports.EventEmitter;\n\n    /**\n     * Finds the index of the listener for the event in its storage array.\n     *\n     * @param {Function[]} listeners Array of listeners to search through.\n     * @param {Function} listener Method to look for.\n     * @return {Number} Index of the specified listener, -1 if not found\n     * @api private\n     */\n    function indexOfListener(listeners, listener) {\n        var i = listeners.length;\n        while (i--) {\n            if (listeners[i].listener === listener) {\n                return i;\n            }\n        }\n\n        return -1;\n    }\n\n    /**\n     * Alias a method while keeping the context correct, to allow for overwriting of target method.\n     *\n     * @param {String} name The name of the target method.\n     * @return {Function} The aliased method\n     * @api private\n     */\n    function alias(name) {\n        return function aliasClosure() {\n            return this[name].apply(this, arguments);\n        };\n    }\n\n    /**\n     * Returns the listener array for the specified event.\n     * Will initialise the event object and listener arrays if required.\n     * Will return an object if you use a regex search. The object contains keys for each matched event. So /ba[rz]/ might return an object containing bar and baz. But only if you have either defined them with defineEvent or added some listeners to them.\n     * Each property in the object response is an array of listener functions.\n     *\n     * @param {String|RegExp} evt Name of the event to return the listeners from.\n     * @return {Function[]|Object} All listener functions for the event.\n     */\n    proto.getListeners = function getListeners(evt) {\n        var events = this._getEvents();\n        var response;\n        var key;\n\n        // Return a concatenated array of all matching events if\n        // the selector is a regular expression.\n        if (evt instanceof RegExp) {\n            response = {};\n            for (key in events) {\n                if (events.hasOwnProperty(key) && evt.test(key)) {\n                    response[key] = events[key];\n                }\n            }\n        }\n        else {\n            response = events[evt] || (events[evt] = []);\n        }\n\n        return response;\n    };\n\n    /**\n     * Takes a list of listener objects and flattens it into a list of listener functions.\n     *\n     * @param {Object[]} listeners Raw listener objects.\n     * @return {Function[]} Just the listener functions.\n     */\n    proto.flattenListeners = function flattenListeners(listeners) {\n        var flatListeners = [];\n        var i;\n\n        for (i = 0; i < listeners.length; i += 1) {\n            flatListeners.push(listeners[i].listener);\n        }\n\n        return flatListeners;\n    };\n\n    /**\n     * Fetches the requested listeners via getListeners but will always return the results inside an object. This is mainly for internal use but others may find it useful.\n     *\n     * @param {String|RegExp} evt Name of the event to return the listeners from.\n     * @return {Object} All listener functions for an event in an object.\n     */\n    proto.getListenersAsObject = function getListenersAsObject(evt) {\n        var listeners = this.getListeners(evt);\n        var response;\n\n        if (listeners instanceof Array) {\n            response = {};\n            response[evt] = listeners;\n        }\n\n        return response || listeners;\n    };\n\n    /**\n     * Adds a listener function to the specified event.\n     * The listener will not be added if it is a duplicate.\n     * If the listener returns true then it will be removed after it is called.\n     * If you pass a regular expression as the event name then the listener will be added to all events that match it.\n     *\n     * @param {String|RegExp} evt Name of the event to attach the listener to.\n     * @param {Function} listener Method to be called when the event is emitted. If the function returns true then it will be removed after calling.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.addListener = function addListener(evt, listener) {\n        var listeners = this.getListenersAsObject(evt);\n        var listenerIsWrapped = typeof listener === 'object';\n        var key;\n\n        for (key in listeners) {\n            if (listeners.hasOwnProperty(key) && indexOfListener(listeners[key], listener) === -1) {\n                listeners[key].push(listenerIsWrapped ? listener : {\n                    listener: listener,\n                    once: false\n                });\n            }\n        }\n\n        return this;\n    };\n\n    /**\n     * Alias of addListener\n     */\n    proto.on = alias('addListener');\n\n    /**\n     * Semi-alias of addListener. It will add a listener that will be\n     * automatically removed after its first execution.\n     *\n     * @param {String|RegExp} evt Name of the event to attach the listener to.\n     * @param {Function} listener Method to be called when the event is emitted. If the function returns true then it will be removed after calling.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.addOnceListener = function addOnceListener(evt, listener) {\n        return this.addListener(evt, {\n            listener: listener,\n            once: true\n        });\n    };\n\n    /**\n     * Alias of addOnceListener.\n     */\n    proto.once = alias('addOnceListener');\n\n    /**\n     * Defines an event name. This is required if you want to use a regex to add a listener to multiple events at once. If you don't do this then how do you expect it to know what event to add to? Should it just add to every possible match for a regex? No. That is scary and bad.\n     * You need to tell it what event names should be matched by a regex.\n     *\n     * @param {String} evt Name of the event to create.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.defineEvent = function defineEvent(evt) {\n        this.getListeners(evt);\n        return this;\n    };\n\n    /**\n     * Uses defineEvent to define multiple events.\n     *\n     * @param {String[]} evts An array of event names to define.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.defineEvents = function defineEvents(evts) {\n        for (var i = 0; i < evts.length; i += 1) {\n            this.defineEvent(evts[i]);\n        }\n        return this;\n    };\n\n    /**\n     * Removes a listener function from the specified event.\n     * When passed a regular expression as the event name, it will remove the listener from all events that match it.\n     *\n     * @param {String|RegExp} evt Name of the event to remove the listener from.\n     * @param {Function} listener Method to remove from the event.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.removeListener = function removeListener(evt, listener) {\n        var listeners = this.getListenersAsObject(evt);\n        var index;\n        var key;\n\n        for (key in listeners) {\n            if (listeners.hasOwnProperty(key)) {\n                index = indexOfListener(listeners[key], listener);\n\n                if (index !== -1) {\n                    listeners[key].splice(index, 1);\n                }\n            }\n        }\n\n        return this;\n    };\n\n    /**\n     * Alias of removeListener\n     */\n    proto.off = alias('removeListener');\n\n    /**\n     * Adds listeners in bulk using the manipulateListeners method.\n     * If you pass an object as the second argument you can add to multiple events at once. The object should contain key value pairs of events and listeners or listener arrays. You can also pass it an event name and an array of listeners to be added.\n     * You can also pass it a regular expression to add the array of listeners to all events that match it.\n     * Yeah, this function does quite a bit. That's probably a bad thing.\n     *\n     * @param {String|Object|RegExp} evt An event name if you will pass an array of listeners next. An object if you wish to add to multiple events at once.\n     * @param {Function[]} [listeners] An optional array of listener functions to add.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.addListeners = function addListeners(evt, listeners) {\n        // Pass through to manipulateListeners\n        return this.manipulateListeners(false, evt, listeners);\n    };\n\n    /**\n     * Removes listeners in bulk using the manipulateListeners method.\n     * If you pass an object as the second argument you can remove from multiple events at once. The object should contain key value pairs of events and listeners or listener arrays.\n     * You can also pass it an event name and an array of listeners to be removed.\n     * You can also pass it a regular expression to remove the listeners from all events that match it.\n     *\n     * @param {String|Object|RegExp} evt An event name if you will pass an array of listeners next. An object if you wish to remove from multiple events at once.\n     * @param {Function[]} [listeners] An optional array of listener functions to remove.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.removeListeners = function removeListeners(evt, listeners) {\n        // Pass through to manipulateListeners\n        return this.manipulateListeners(true, evt, listeners);\n    };\n\n    /**\n     * Edits listeners in bulk. The addListeners and removeListeners methods both use this to do their job. You should really use those instead, this is a little lower level.\n     * The first argument will determine if the listeners are removed (true) or added (false).\n     * If you pass an object as the second argument you can add/remove from multiple events at once. The object should contain key value pairs of events and listeners or listener arrays.\n     * You can also pass it an event name and an array of listeners to be added/removed.\n     * You can also pass it a regular expression to manipulate the listeners of all events that match it.\n     *\n     * @param {Boolean} remove True if you want to remove listeners, false if you want to add.\n     * @param {String|Object|RegExp} evt An event name if you will pass an array of listeners next. An object if you wish to add/remove from multiple events at once.\n     * @param {Function[]} [listeners] An optional array of listener functions to add/remove.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.manipulateListeners = function manipulateListeners(remove, evt, listeners) {\n        var i;\n        var value;\n        var single = remove ? this.removeListener : this.addListener;\n        var multiple = remove ? this.removeListeners : this.addListeners;\n\n        // If evt is an object then pass each of its properties to this method\n        if (typeof evt === 'object' && !(evt instanceof RegExp)) {\n            for (i in evt) {\n                if (evt.hasOwnProperty(i) && (value = evt[i])) {\n                    // Pass the single listener straight through to the singular method\n                    if (typeof value === 'function') {\n                        single.call(this, i, value);\n                    }\n                    else {\n                        // Otherwise pass back to the multiple function\n                        multiple.call(this, i, value);\n                    }\n                }\n            }\n        }\n        else {\n            // So evt must be a string\n            // And listeners must be an array of listeners\n            // Loop over it and pass each one to the multiple method\n            i = listeners.length;\n            while (i--) {\n                single.call(this, evt, listeners[i]);\n            }\n        }\n\n        return this;\n    };\n\n    /**\n     * Removes all listeners from a specified event.\n     * If you do not specify an event then all listeners will be removed.\n     * That means every event will be emptied.\n     * You can also pass a regex to remove all events that match it.\n     *\n     * @param {String|RegExp} [evt] Optional name of the event to remove all listeners for. Will remove from every event if not passed.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.removeEvent = function removeEvent(evt) {\n        var type = typeof evt;\n        var events = this._getEvents();\n        var key;\n\n        // Remove different things depending on the state of evt\n        if (type === 'string') {\n            // Remove all listeners for the specified event\n            delete events[evt];\n        }\n        else if (evt instanceof RegExp) {\n            // Remove all events matching the regex.\n            for (key in events) {\n                if (events.hasOwnProperty(key) && evt.test(key)) {\n                    delete events[key];\n                }\n            }\n        }\n        else {\n            // Remove all listeners in all events\n            delete this._events;\n        }\n\n        return this;\n    };\n\n    /**\n     * Alias of removeEvent.\n     *\n     * Added to mirror the node API.\n     */\n    proto.removeAllListeners = alias('removeEvent');\n\n    /**\n     * Emits an event of your choice.\n     * When emitted, every listener attached to that event will be executed.\n     * If you pass the optional argument array then those arguments will be passed to every listener upon execution.\n     * Because it uses `apply`, your array of arguments will be passed as if you wrote them out separately.\n     * So they will not arrive within the array on the other side, they will be separate.\n     * You can also pass a regular expression to emit to all events that match it.\n     *\n     * @param {String|RegExp} evt Name of the event to emit and execute listeners for.\n     * @param {Array} [args] Optional array of arguments to be passed to each listener.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.emitEvent = function emitEvent(evt, args) {\n        var listenersMap = this.getListenersAsObject(evt);\n        var listeners;\n        var listener;\n        var i;\n        var key;\n        var response;\n\n        for (key in listenersMap) {\n            if (listenersMap.hasOwnProperty(key)) {\n                listeners = listenersMap[key].slice(0);\n                i = listeners.length;\n\n                while (i--) {\n                    // If the listener returns true then it shall be removed from the event\n                    // The function is executed either with a basic call or an apply if there is an args array\n                    listener = listeners[i];\n\n                    if (listener.once === true) {\n                        this.removeListener(evt, listener.listener);\n                    }\n\n                    response = listener.listener.apply(this, args || []);\n\n                    if (response === this._getOnceReturnValue()) {\n                        this.removeListener(evt, listener.listener);\n                    }\n                }\n            }\n        }\n\n        return this;\n    };\n\n    /**\n     * Alias of emitEvent\n     */\n    proto.trigger = alias('emitEvent');\n\n    /**\n     * Subtly different from emitEvent in that it will pass its arguments on to the listeners, as opposed to taking a single array of arguments to pass on.\n     * As with emitEvent, you can pass a regex in place of the event name to emit to all events that match it.\n     *\n     * @param {String|RegExp} evt Name of the event to emit and execute listeners for.\n     * @param {...*} Optional additional arguments to be passed to each listener.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.emit = function emit(evt) {\n        var args = Array.prototype.slice.call(arguments, 1);\n        return this.emitEvent(evt, args);\n    };\n\n    /**\n     * Sets the current value to check against when executing listeners. If a\n     * listeners return value matches the one set here then it will be removed\n     * after execution. This value defaults to true.\n     *\n     * @param {*} value The new value to check for when executing listeners.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.setOnceReturnValue = function setOnceReturnValue(value) {\n        this._onceReturnValue = value;\n        return this;\n    };\n\n    /**\n     * Fetches the current value to check against when executing listeners. If\n     * the listeners return value matches this one then it should be removed\n     * automatically. It will return true by default.\n     *\n     * @return {*|Boolean} The current value to check for or the default, true.\n     * @api private\n     */\n    proto._getOnceReturnValue = function _getOnceReturnValue() {\n        if (this.hasOwnProperty('_onceReturnValue')) {\n            return this._onceReturnValue;\n        }\n        else {\n            return true;\n        }\n    };\n\n    /**\n     * Fetches the events object and creates one if required.\n     *\n     * @return {Object} The events storage object.\n     * @api private\n     */\n    proto._getEvents = function _getEvents() {\n        return this._events || (this._events = {});\n    };\n\n    /**\n     * Reverts the global {@link EventEmitter} to its previous value and returns a reference to this version.\n     *\n     * @return {Function} Non conflicting EventEmitter class.\n     */\n    EventEmitter.noConflict = function noConflict() {\n        exports.EventEmitter = originalGlobalValue;\n        return EventEmitter;\n    };\n\n    // Expose the class either via AMD, CommonJS or the global object\n    if (typeof define === 'function' && define.amd) {\n        define(function () {\n            return EventEmitter;\n        });\n    }\n    else if (typeof module === 'object' && module.exports){\n        module.exports = EventEmitter;\n    }\n    else {\n        exports.EventEmitter = EventEmitter;\n    }\n}.call(this));\n\n},{}],2:[function(require,module,exports){\n'use strict';\n\nvar defaults = {\n        'animation': 'fade',\n        'rehide': false,\n        'content': '',\n        'cookieTime': 0,\n        'icon': '&times',\n        'minimumScreenWidth': 0,\n        'position': 'center',\n        'testMode': false,\n        'trigger': false,\n        'closable': true\n    },\n    Boxzilla;\n\nfunction animate(el, property, target, callback) {\n    var last = +new Date();\n    var css = window.getComputedStyle(el);\n    var initial = parseFloat(css[property]);\n    var step = ( target - initial ) / 500;\n\n    console.log(\"Now: \" + initial);\n    console.log(\"Step: \" + step);\n\n    var tick = function() {\n        var suffix = property == \"height\" ? \"px\" : \"\";\n        var current = parseFloat(el.style[property]) || initial;\n        var increment = step * (new Date() - last);\n        var newValue = current + increment;\n        var done = false;\n\n        if( step > 0 && newValue > target || step < 0 && newValue < target ) {\n            newValue = target;\n            done = true;\n        }\n\n        el.style[property] = newValue + suffix;\n        //el.style.opacity = +el.style.opacity + (new Date() - last) / 400;\n        last = +new Date();\n\n        // keep going\n        if(!done) {\n            (window.requestAnimationFrame && requestAnimationFrame(tick)) || setTimeout(tick, 16);\n        } else {\n            callback && callback();\n        }\n    };\n\n    tick();\n}\n\n/**\n * Merge 2 objects, values of the latter overwriting the former.\n *\n * @param obj1\n * @param obj2\n * @returns {*}\n */\nfunction merge( obj1, obj2 ) {\n    var obj3 = {};\n    for (var attrname in obj1) { obj3[attrname] = obj1[attrname]; }\n    for (var attrname in obj2) { obj3[attrname] = obj2[attrname]; }\n    return obj3;\n}\n\n// Box Object\nvar Box = function( id, config ) {\n    this.id \t\t= id;\n\n    // store config values\n    this.config = merge(defaults, config);\n\n    // store ref to overlay\n    this.overlay = document.getElementById('boxzilla-overlay');\n\n    // state\n    this.visible \t= false;\n    this.closed \t= false;\n    this.triggered \t= false;\n    this.triggerHeight = 0;\n    this.cookieSet = false;\n\n    // if a trigger was given, calculate values once and store\n    if( this.config.trigger ) {\n        if( this.config.trigger.method === 'percentage' || this.config.trigger.method === 'element' ) {\n            this.triggerHeight = this.calculateTriggerHeight();\n        }\n\n        this.cookieSet = this.isCookieSet();\n    }\n\n    // create dom element for this box\n    this.element = this.dom();\n\n    // further initialise the box\n    this.events();\n};\n\n// initialise the box\nBox.prototype.events = function() {\n    var box = this;\n\n    // attach event to \"close\" icon inside box\n    this.element.querySelector('.boxzilla-close-icon').addEventListener('click', box.dismiss.bind(this));\n\n    this.element.addEventListener('click', function(e) {\n        if( e.target.tagName === 'A' ) {\n            Boxzilla.trigger('box.interactions.link', [ box, e.target ] );\n        }\n    }, false);\n\n    this.element.addEventListener('submit', function(e) {\n        box.setCookie();\n        Boxzilla.trigger('box.interactions.form', [ box, e.target ]);\n    }, false);\n\n    // attach event to all links referring #boxzilla-{box_id}\n    document.body.addEventListener('click', function(e) {\n        var href = \"#boxzilla-\" + box.id;\n        if(e.target.tagName === 'A' && e.target.getAttribute(\"href\").substring(-(href.length)) === href) {\n            box.toggle();\n            e.preventDefault();\n        }\n    }, false);\n\n    // maybe show box right away\n    if( this.fits() && this.locationHashRefersBox() ) {\n        window.addEventListener('load', this.show.bind(this));\n    }\n\n};\n\n// generate dom elements for this box\nBox.prototype.dom = function() {\n    var wrapper = document.createElement('div');\n    wrapper.className = 'boxzilla-container boxzilla-' + this.config.position + '-container';\n\n    var box = document.createElement('div');\n    box.setAttribute('id', 'boxzilla-' + this.id);\n    box.className = 'boxzilla boxzilla-' + this.id + ' boxzilla-' + this.config.position;\n    box.style.display = 'none';\n    wrapper.appendChild(box);\n\n    var content = document.createElement('div');\n    content.className = 'boxzilla-content';\n    content.innerHTML = this.config.content;\n    box.appendChild(content);\n\n    // remove <script> from box content and append them to the document body\n    var scripts = content.querySelectorAll('script');\n    if(scripts.length) {\n        var script = document.createElement('script');\n        for( var i=0; i<scripts.length; i++ ) {\n            script.appendChild(document.createTextNode(scripts[i].text));\n            scripts[i].parentNode.removeChild(scripts[i]);\n        }\n        document.body.appendChild(script);\n    }\n    \n    if( this.config.closable && this.config.icon ) {\n        var icon = document.createElement('span');\n        icon.className = \"boxzilla-close-icon\";\n        icon.innerHTML = this.config.icon;\n        box.appendChild(icon);\n    }\n\n    document.body.appendChild(wrapper);\n\n    return box;\n};\n\n// set (calculate) custom box styling depending on box options\nBox.prototype.setCustomBoxStyling = function() {\n\n    // reset element to its initial state\n    this.element.style.overflowY = 'auto';\n    this.element.style.maxHeight = 'none';\n\n    // get new dimensions\n    var windowHeight = window.innerHeight;\n    var boxHeight = this.element.clientHeight;\n\n    // add scrollbar to box and limit height\n    if( boxHeight > windowHeight ) {\n        this.element.style.maxHeight = windowHeight + \"px\";\n        this.element.style.overflowY = 'scroll';\n    }\n\n    // set new top margin for boxes which are centered\n    if( this.config.position === 'center' ) {\n        var newTopMargin = ( ( windowHeight - boxHeight ) / 2 );\n        newTopMargin = newTopMargin >= 0 ? newTopMargin : 0;\n        this.element.style.marginTop = newTopMargin + \"px\";\n    }\n\n};\n\n// toggle visibility of the box\nBox.prototype.toggle = function(show) {\n\n    // revert visibility if no explicit argument is given\n    if( typeof( show ) === \"undefined\" ) {\n        show = ! this.visible;\n    }\n\n    // is box already at desired visibility?\n    if( show === this.visible ) {\n        return false;\n    }\n\n    // if box should be hidden but is not closable, bail.\n    if( ! show && ! this.config.closable ) {\n        return false;\n    }\n\n    // set new visibility status\n    this.visible = show;\n\n    // calculate custom styling for which CSS is \"too stupid\"\n    this.setCustomBoxStyling();\n\n    // trigger event\n    Boxzilla.trigger('box.' + ( show ? 'show' : 'hide' ), [ this ] );\n\n    // show or hide box using selected animation\n    if( this.visible ) {\n        this.element.style.display = '';\n        var targetHeight = this.element.clientHeight;\n\n        if( this.config.position === 'center' ) {\n            this.overlay.style.display = 'block';\n            this.overlay.style.opacity = 0;\n            animate(this.overlay, 'opacity', 1);\n        }\n\n        if( this.config.animation == \"fade\" ) {\n            this.element.style.opacity = 0;\n            animate(this.element, \"opacity\", 1);\n        } else {\n            this.element.style.height = 0;\n            animate(this.element, \"height\", targetHeight);\n        }\n    } else {\n        var thenHide = function() {\n            this.style.display = 'none';\n        };\n        if( this.config.animation == \"fade\" ) {\n            animate(this.element, \"opacity\", 0, thenHide.bind(this.element));\n        } else {\n            this.element.style.boxSizing = 'border-box';\n            animate(this.element, \"height\", 0, thenHide.bind(this.element));\n        }\n\n        if( this.config.position === 'center' ) {\n            animate(this.overlay, 'opacity', 0, thenHide.bind(this.overlay));\n        }\n    }\n\n    // focus on first input field in box\n    var firstInput = this.element.querySelector('input, textarea');\n    if(firstInput) {\n        firstInput.focus();\n    }\n\n    return true;\n};\n\n// show the box\nBox.prototype.show = function() {\n    return this.toggle(true);\n};\n\n// hide the box\nBox.prototype.hide = function() {\n    return this.toggle(false);\n};\n\n// calculate trigger height\nBox.prototype.calculateTriggerHeight = function() {\n    var triggerHeight = 0;\n\n    if( this.config.trigger.method === 'element' ) {\n        var triggerElement = document.body.querySelector(this.config.trigger.value);\n        if( triggerElement ) {\n            var offset = triggerElement.getBoundingClientRect();\n            triggerHeight = offset.top;\n        }\n    } else if( this.config.trigger.method === 'percentage' ) {\n        triggerHeight = ( this.config.trigger.value / 100 * document.clientHeight );\n    }\n\n    return triggerHeight;\n};\n\n// set cookie that disables automatically showing the box\nBox.prototype.setCookie = function() {\n    // do nothing if cookieTime evaluates to false\n    if(! this.config.cookieTime) {\n        return;\n    }\n\n    var expiryDate = new Date();\n    expiryDate.setDate( expiryDate.getDate() + this.config.cookieTime );\n    document.cookie = 'boxzilla_box_'+ this.id + '=true; expires='+ expiryDate.toUTCString() +'; path=/';\n};\n\n// checks whether window.location.hash equals the box element ID or that of any element inside the box\nBox.prototype.locationHashRefersBox = function() {\n\n    if( ! window.location.hash || 0 === window.location.hash.length ) {\n        return false;\n    }\n\n    var elementId = window.location.hash.substring(1);\n    if( elementId === this.element.id ) {\n        return true;\n    } else if( this.element.querySelector('#' + elementId) ) {\n        return true;\n    }\n\n    return false;\n};\n\nBox.prototype.fits = function() {\n    if( this.config.minimumScreenWidth <= 0 ) {\n        return true;\n    }\n\n    return window.innerWidth > this.config.minimumScreenWidth\n};\n\n// is this box enabled?\nBox.prototype.mayAutoShow = function() {\n\n    // don't show if box was closed (dismissed) before\n    if( this.closed ) {\n        return false;\n    }\n\n    // check if box fits on given minimum screen width\n    if( ! this.fits() ) {\n        return false;\n    }\n\n    // if trigger empty or error in calculating triggerHeight, return false\n    if( ! this.config.trigger ) {\n        return false;\n    }\n\n    // rely on cookie value (show if not set, don't show if set)\n    return ! this.cookieSet;\n};\n\nBox.prototype.mayRehide = function() {\n    return this.config.rehide && this.triggered;\n};\n\nBox.prototype.isCookieSet = function() {\n    // always show on test mode\n    if( this.config.testMode ) {\n        return false;\n    }\n\n    // check for cookie\n    if( ! this.config.cookieTime ) {\n        return false;\n    }\n\n    var cookieSet = document.cookie.replace(new RegExp(\"(?:(?:^|.*;)\\\\s*\" + 'boxzilla_box_' + this.id + \"\\\\s*\\\\=\\\\s*([^;]*).*$)|^.*$\"), \"$1\") === \"true\";\n    return cookieSet;\n\n};\n\nBox.prototype.trigger = function() {\n    var shown = this.show();\n    if( shown ) {\n        this.triggered = true;\n    }\n};\n\nBox.prototype.dismiss = function() {\n    this.hide();\n    this.setCookie();\n    this.closed = true;\n    Boxzilla.trigger('box.dismiss', [ this ]);\n};\n\nmodule.exports = function(_Boxzilla) {\n    Boxzilla = _Boxzilla;\n    return Box;\n};\n},{}],3:[function(require,module,exports){\n'use strict';\n\nvar EventEmitter = require('wolfy87-eventemitter'),\n    Boxzilla = Object.create(EventEmitter.prototype),\n    Box = require('./Box.js')(Boxzilla),\n    Timer = require('./Timer.js'),\n    boxes = {},\n    windowHeight = window.innerHeight,\n    overlay = document.createElement('div'),\n    exitIntentDelayTimer,\n    exitIntentTriggered,\n    siteTimer = new Timer(sessionStorage.getItem('boxzilla_timer') || 0),\n    pageTimer = new Timer(0),\n    pageViews = sessionStorage.getItem('boxzilla_pageviews') || 0;\n\nfunction each( obj, callback ) {\n    for( var key in obj ) {\n        if(! obj.hasOwnProperty(key)) continue;\n        callback(obj[key]);\n    }\n}\n\nfunction throttle(fn, threshhold, scope) {\n    threshhold || (threshhold = 250);\n    var last,\n        deferTimer;\n    return function () {\n        var context = scope || this;\n\n        var now = +new Date,\n            args = arguments;\n        if (last && now < last + threshhold) {\n            // hold on to it\n            clearTimeout(deferTimer);\n            deferTimer = setTimeout(function () {\n                last = now;\n                fn.apply(context, args);\n            }, threshhold);\n        } else {\n            last = now;\n            fn.apply(context, args);\n        }\n    };\n}\n\n// \"keyup\" listener\nfunction onKeyUp(e) {\n    if (e.keyCode == 27) {\n        Boxzilla.dismiss();\n    }\n}\n\n// check \"pageviews\" criteria for each box\nfunction checkPageViewsCriteria() {\n    each(boxes, function(box) {\n        if( ! box.mayAutoShow() ) {\n            return;\n        }\n\n        if( box.config.trigger.method === 'pageviews' && pageViews >= box.config.trigger.value ) {\n            box.trigger();\n        }\n    });\n}\n\n// check time trigger criteria for each box\nfunction checkTimeCriteria() {\n    each(boxes, function(box) {\n        if( ! box.mayAutoShow() ) {\n            return;\n        }\n\n        // check \"time on site\" trigger\n        if (box.config.trigger.method === 'time_on_site' && siteTimer.time >= box.config.trigger.value) {\n            box.trigger();\n        }\n\n        // check \"time on page\" trigger\n        if (box.config.trigger.method === 'time_on_page' && pageTimer.time >= box.config.trigger.value) {\n            box.trigger();\n        }\n    });\n}\n\n// check triggerHeight criteria for all boxes\nfunction checkHeightCriteria() {\n    var scrollY = window.scrollY;\n    var scrollHeight = scrollY + ( windowHeight * 0.667 );\n\n    each(boxes, function(box) {\n        if( ! box.mayAutoShow() || box.triggerHeight <= 0 ) {\n            return;\n        }\n\n        if( scrollHeight > box.triggerHeight ) {\n            box.trigger();\n        } else if( box.mayRehide() ) {\n            box.hide();\n        }\n    });\n}\n\n// recalculate heights and variables based on height\nfunction recalculateHeights() {\n    windowHeight = window.innerHeight;\n\n    each(boxes, function(box) {\n        box.setCustomBoxStyling();\n    });\n}\n\nfunction onOverlayClick(e) {\n    var x = e.offsetX;\n    var y = e.offsetY;\n\n    // calculate if click was near a box to avoid closing it (click error margin)\n    each(boxes, function(box) {\n        var rect = box.element.getBoundingClientRect();\n        var margin = 100 + ( window.innerWidth * 0.05 );\n\n        // if click was not anywhere near box, dismiss it.\n        if( x < ( rect.left - margin ) || x > ( rect.right + margin ) || y < ( rect.top - margin ) || y > ( rect.bottom + margin ) ) {\n            box.dismiss();\n        }\n    });\n}\n\nfunction triggerExitIntent() {\n    if(exitIntentTriggered) return;\n\n    each(boxes, function(box) {\n        if(box.mayAutoShow() && box.config.trigger.method === 'exit_intent' ) {\n            box.trigger();\n        }\n    });\n\n    exitIntentTriggered = true;\n}\n\nfunction onMouseLeave(e) {\n    var delay = 400;\n\n    // did mouse leave at top of window?\n    if( e.clientY <= 0 ) {\n        exitIntentDelayTimer = window.setTimeout(triggerExitIntent, delay);\n    }\n}\n\nfunction onMouseEnter() {\n    if( exitIntentDelayTimer ) {\n        window.clearInterval(exitIntentDelayTimer);\n        exitIntentDelayTimer = null;\n    }\n}\n\nvar timers = {\n    start: function() {\n        var sessionTime = sessionStorage.getItem('boxzilla_timer');\n        if( sessionTime ) siteTimer.time = sessionTime;\n        siteTimer.start();\n        pageTimer.start();\n    },\n    stop: function() {\n        sessionStorage.setItem('boxzilla_timer', siteTimer.time);\n        siteTimer.stop();\n        pageTimer.stop();\n    }\n};\n\n// initialise & add event listeners\nBoxzilla.init = function() {\n    // add overlay element to dom\n    overlay.id = 'boxzilla-overlay';\n    document.body.appendChild(overlay);\n\n    // event binds\n    window.addEventListener('scroll', throttle(checkHeightCriteria));\n    window.addEventListener('resize', throttle(recalculateHeights));\n    window.addEventListener('load', recalculateHeights );\n    window.addEventListener('mouseleave', onMouseLeave);\n    window.addEventListener('mouseenter', onMouseEnter);\n    window.addEventListener('keyup', onKeyUp);\n    overlay.addEventListener('click', onOverlayClick);\n    window.setInterval(checkTimeCriteria, 1000);\n    window.setTimeout(checkPageViewsCriteria, 1000 );\n\n    timers.start();\n    window.addEventListener('focus', timers.start);\n    window.addEventListener('beforeunload', function() {\n        timers.stop();\n        sessionStorage.setItem('boxzilla_pageviews', ++pageViews);\n    });\n    window.addEventListener('blur', timers.stop);\n\n    Boxzilla.trigger('ready');\n};\n\n/**\n * Create a new Box\n *\n * @param string id\n * @param object opts\n *\n * @returns Box\n */\nBoxzilla.create = function(id, opts) {\n    boxes[id] = new Box(id, opts);\n    return boxes[id];\n};\n\n// dismiss a single box (or all by omitting id param)\nBoxzilla.dismiss = function(id) {\n    // if no id given, dismiss all current open boxes\n    if( typeof(id) === \"undefined\" ) {\n        each(boxes, function(box) { box.dismiss(); });\n    } else if( typeof( boxes[id] ) === \"object\" ) {\n        boxes[id].dismiss();\n    }\n};\n\nBoxzilla.hide = function(id) {\n    if( typeof(id) === \"undefined\" ) {\n        each(boxes, function(box) { box.hide(); });\n    } else if( typeof( boxes[id] ) === \"object\" ) {\n        boxes[id].hide();\n    }\n};\n\nBoxzilla.show = function(id) {\n    if( typeof(id) === \"undefined\" ) {\n        each(boxes, function(box) { box.show(); });\n    } else if( typeof( boxes[id] ) === \"object\" ) {\n        boxes[id].show();\n    }\n};\n\nBoxzilla.toggle = function(id) {\n    if( typeof(id) === \"undefined\" ) {\n        each(boxes, function(box) { box.toggle(); });\n    } else if( typeof( boxes[id] ) === \"object\" ) {\n        boxes[id].toggle();\n    }\n};\n\nwindow.Boxzilla = Boxzilla;\n\nif ( typeof module !== 'undefined' && module.exports ) {\n    module.exports = Boxzilla;\n}\n},{\"./Box.js\":2,\"./Timer.js\":4,\"wolfy87-eventemitter\":1}],4:[function(require,module,exports){\n'use strict';\n\nvar Timer = function(start) {\n    this.time = start;\n    this.interval = 0;\n};\n\nTimer.prototype.tick = function() {\n    this.time++;\n};\n\nTimer.prototype.start = function() {\n    if( ! this.interval ) {\n        this.interval = window.setInterval(this.tick.bind(this), 1000);\n    }\n};\n\nTimer.prototype.stop = function() {\n    window.clearInterval(this.interval);\n    this.interval = 0;\n};\n\nmodule.exports = Timer;\n},{}]},{},[3]);\n"],"sourceRoot":"/source/"}